{
  "permissions": {
    "allow": [
      "mcp__supabase__list_projects",
      "mcp__supabase__list_tables",
      "mcp__supabase__apply_migration",
      "mcp__stripe__create_product",
      "mcp__stripe__create_price",
      "Bash(npm install)",
      "Bash(npm install:*)",
      "Bash(npm run build:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "mcp__supabase__execute_sql",
      "Bash(npm run lint:*)",
      "mcp__stripe__list_customers",
      "mcp__stripe__list_subscriptions",
      "mcp__stripe__list_payment_intents",
      "mcp__stripe__list_products",
      "mcp__stripe__list_prices",
      "Bash(mkdir:*)",
      "Bash(npx supabase db dump:*)",
      "Bash(sudo apt-get:*)",
      "Bash(sudo apt-get install:*)",
      "Bash(chmod:*)",
      "mcp__supabase__get_project",
      "Bash(ls:*)",
      "Bash(npx tsc:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run:*)",
      "Bash(rm:*)",
      "mcp__supabase__search_docs",
      "Bash(touch:*)",
      "Bash(for f in *.test.ts; do mv \"$f\" \"${f%.test.ts}.test.template.ts\"; done)",
      "Bash(npm audit:*)",
      "Bash(npm view:*)",
      "Bash(task-master list:*)",
      "Bash(task-master parse-prd:*)",
      "Bash(task-master analyze-complexity:*)",
      "Bash(task-master expand:*)",
      "Bash(cp:*)",
      "Bash(task-master generate:*)",
      "Bash(task-master show:*)",
      "Bash(task-master set-status:*)",
      "Bash(curl:*)",
      "Bash(task-master:*)",
      "mcp__supabase__get_advisors",
      "WebFetch(domain:developers.google.com)",
      "WebFetch(domain:www.whalesync.com)",
      "WebFetch(domain:ahrefs.com)",
      "Bash(tree:*)",
      "mcp__zapier__add_tools",
      "mcp__zapier__posthog_capture_event",
      "WebFetch(domain:posthog.com)",
      "Bash(for i in {1..10})",
      "Bash(do echo \"=== Task $i ===\")",
      "Bash(done)",
      "Bash(mv:*)",
      "Bash(git worktree:*)",
      "Bash(true)",
      "Bash(cat:*)",
      "Bash(npm uninstall:*)",
      "Bash(node:*)",
      "Bash(task-master update-subtask --id=1.4 --prompt=\"Fixed all TypeScript errors systematically. Fixed potrace types, SVGO plugin config, Buffer.from usage, and import/export issues. All converters now type-check successfully. npm run type-check passes with zero errors.\")",
      "Bash(git add:*)",
      "Bash(git reset:*)",
      "Bash(git commit:*)",
      "Bash(git config:*)",
      "Bash(npx tsx:*)",
      "Bash(sed:*)",
      "Bash(ln:*)",
      "Bash(npx eslint:*)",
      "Bash(npx next lint:*)",
      "Bash(npm ls:*)",
      "Bash(npx next build:*)",
      "Bash(awk:*)",
      "Bash(test:*)",
      "mcp__puppeteer__puppeteer_navigate",
      "mcp__puppeteer__puppeteer_screenshot",
      "Bash(pgrep:*)",
      "mcp__puppeteer__puppeteer_evaluate",
      "mcp__puppeteer__puppeteer_click",
      "mcp__puppeteer__puppeteer_fill",
      "Bash(pkill:*)",
      "Bash(npx kill-port:*)",
      "Bash(python3:*)",
      "Bash(NEXT_TELEMETRY_DISABLED=1 npm run build)",
      "Bash(npm search:*)",
      "Bash(od:*)",
      "Bash(npx --package=typescript tsc --noEmit --jsx react components/converters/svg-to-tiff-specific.tsx)",
      "Bash(timeout 30 npm run dev:*)",
      "Bash(timeout 10 tail -f .next/build-manifest.json)",
      "Bash(echo:*)",
      "Bash(npx task-master-ai:*)",
      "Bash(timeout 30s npm run build:*)",
      "Bash(timeout:*)",
      "Bash(rg:*)",
      "Bash(NEXT_BUILD_TIMEOUT=300 NODE_OPTIONS=\"--max-old-space-size=4096\" npm run build)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_install",
      "mcp__playwright__browser_install",
      "mcp__playwright__browser_install",
      "mcp__playwright__browser_install",
      "mcp__playwright__browser_install",
      "mcp__playwright__browser_install",
      "mcp__playwright__browser_install",
      "mcp__playwright__browser_install",
      "Bash(npm:*)",
      "Bash(for file in ./content/galleries/*.mdx)",
      "Bash(do sed -i 's/https:\\/\\/svgai\\.app/https:\\/\\/svgai.org/g' \"$file\")",
      "Bash(for:*)",
      "Bash(do sed -i 's/svgai\\.app/svgai.org/g' \"$file\")",
      "Bash(do sed -i 's/With \\*\\*[0-9,]* monthly searches\\*\\* for [^,]*, //g' \"$file\")",
      "Bash(npx next telemetry:*)",
      "WebFetch(domain:cloudconvert.com)",
      "Bash(jq:*)",
      "Bash(sudo rm:*)",
      "Bash(NEXT_BUILD_DIRECTORY=.next-new npm run build)",
      "Bash(killall:*)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=4096\" npm run build)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=4096\" timeout 300 npm run build)",
      "WebFetch(domain:api.cloudconvert.com)",
      "mcp__supabase__list_migrations",
      "mcp__supabase__list_edge_functions",
      "mcp__supabase__deploy_edge_function",
      "Bash(NODE_OPTIONS='--max-old-space-size=4096' npm run build)",
      "Bash(# Fix react-native-svg-animation.mdx\nsed -i ''s/console\\.log(`Animation took ${duration}ms`);/console.log(`Animation took \\\\${duration}ms`);/g'' /mnt/a/svgaibackup/content/learn/react-native-svg-animation.mdx\n\n# Fix svg-to-png-guide.mdx\nsed -i ''s/console\\.log(`✓ Converted: ${file} → ${outputPath}`);/console.log(`✓ Converted: \\\\${file} → \\\\${outputPath}`);/g'' /mnt/a/svgaibackup/content/learn/svg-to-png-guide.mdx\nsed -i ''s/console\\.error(`✗ Failed: ${file} - ${error\\.message}`);/console.error(`✗ Failed: \\\\${file} - \\\\${error.message}`);/g'' /mnt/a/svgaibackup/content/learn/svg-to-png-guide.mdx\nsed -i ''s/console\\.log(`\\\\nConversion complete: ${successful}\\/${files\\.length} files converted`);/console.log(`\\\\\\\\nConversion complete: \\\\${successful}\\/\\\\${files.length} files converted`);/g'' /mnt/a/svgaibackup/content/learn/svg-to-png-guide.mdx\nsed -i ''s/path\\.basename += `-${size}px`;/path.basename += `-\\\\${size}px`;/g'' /mnt/a/svgaibackup/content/learn/svg-to-png-guide.mdx\nsed -i ''s/if convert \"\"$file\"\" \"\"${file%\\.svg}\\.png\"\" 2>> \"\"$LOG_FILE\"\"; then/if convert \"\"$file\"\" \"\"\\\\${file%.svg}.png\"\" 2>> \"\"$LOG_FILE\"\"; then/g'' /mnt/a/svgaibackup/content/learn/svg-to-png-guide.mdx\nsed -i ''s/convert \"\"$file\"\" \"\"${file%\\.svg}\\.png\"\"/convert \"\"$file\"\" \"\"\\\\${file%.svg}.png\"\"/g'' /mnt/a/svgaibackup/content/learn/svg-to-png-guide.mdx\n\necho \"\"Template literals fixed\"\")",
      "Bash(kill:*)",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_press_key",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_network_requests",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_tab_select",
      "mcp__playwright__browser_close",
      "mcp__playwright__browser_navigate_back",
      "Bash(do echo \"=== $file ===\")",
      "mcp__playwright__browser_snapshot",
      "Bash(NODE_ENV=production npm run build)",
      "Bash(export NEXT_TELEMETRY_DISABLED=1)",
      "Bash(export DISABLE_COLLECT_NEXT_TELEMETRY=1)",
      "Bash(NODE_OPTIONS=\"--max_old_space_size=4096\" npm run build)",
      "Bash(git checkout:*)",
      "Bash(./tests/test-anonymous-limits.sh:*)",
      "Bash(npx:*)",
      "Bash(diff:*)",
      "mcp__playwright__browser_evaluate",
      "Bash(git rm:*)",
      "Bash(HOST=localhost npm run dev)",
      "WebFetch(domain:docs.stripe.com)",
      "WebFetch(domain:stripe.com)",
      "Bash(npx prettier:*)",
      "mcp__stripe__search_stripe_documentation",
      "Bash(./fix-imports.sh)",
      "Bash(bash:*)",
      "Bash(NODE_ENV=production npx next build)",
      "Bash(DEBUG=*)",
      "Bash(export NEXT_PRIVATE_WORKER_THREADS=false)",
      "Bash(./clean-build.sh:*)",
      "Bash(./build-workaround.sh:*)",
      "Bash(cmd /c:*)",
      "Bash(HOST=0.0.0.0 PORT=3000 npm run dev)",
      "WebFetch(domain:www.recraft.ai)"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "supabase",
    "stripe",
    "playwright"
  ]
}