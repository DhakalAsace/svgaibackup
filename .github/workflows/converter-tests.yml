name: Converter Tests

on:
  push:
    branches: [main, develop]
    paths:
      - 'lib/converters/**'
      - 'components/converters/**'
      - 'app/convert/**'
      - '.github/workflows/converter-tests.yml'
  pull_request:
    branches: [main]
    paths:
      - 'lib/converters/**'
      - 'components/converters/**'
      - 'app/convert/**'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install test dependencies
      run: |
        npm install --save-dev jest ts-jest @types/jest
        npm install --save-dev identity-obj-proxy
    
    - name: Run converter tests
      run: npm run test:converters
      env:
        CI: true
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: converter-test-results-${{ matrix.node-version }}
        path: converter-test-report.json
    
    - name: Upload coverage reports
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        directory: ./coverage
        flags: converters
        name: converter-coverage
    
    - name: Performance regression check
      if: matrix.node-version == '20.x'
      run: |
        if [ -f converter-test-report.json ]; then
          node -e "
            const report = require('./converter-test-report.json');
            const avgTime = report.results.reduce((sum, r) => sum + r.performance.averageConversionTime, 0) / report.results.length;
            if (avgTime > 1000) {
              console.error('Performance regression detected: Average conversion time > 1s');
              process.exit(1);
            }
          "
        fi

  visual-regression:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        npm install --save-dev jest-image-snapshot
    
    - name: Run visual regression tests
      run: |
        npm run test:converters -- --testNamePattern="Visual regression"
      env:
        CI: true
    
    - name: Upload visual diff artifacts
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: visual-regression-diffs
        path: |
          **/__diff_output__/
          **/__image_snapshots__/

  integration:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Run E2E converter tests
      run: |
        # Start the application in the background
        npm run start &
        SERVER_PID=$!
        
        # Wait for server to be ready
        npx wait-on http://localhost:3000 -t 30000
        
        # Run E2E tests (placeholder - implement actual E2E tests)
        echo "E2E tests would run here"
        
        # Stop the server
        kill $SERVER_PID