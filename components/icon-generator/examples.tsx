"use client"

import { useState } from "react"
import { ChevronLeft, ChevronRight } from "lucide-react"

// Icon examples that showcase the capabilities of the model, organized by use case
const iconExamplesByUseCase = {
  ui_ux: [
    {
      src: "/icon-generator-examples/search-magnifying-glass-icon.svg",
      alt: "AI-generated search magnifying glass UI icon for web interfaces",
      title: "Search UI Icon",
      description: "Professional search icon with magnifying glass design generated by our AI. Perfect for search interfaces, data exploration tools, and website navigation.",
      style: "icon/outline_gradient"
    },
    {
      src: "/icon-generator-examples/notification-bell-with-subtle-animation-indicators.svg",
      alt: "AI-generated notification bell icon with subtle animation indicators",
      title: "Notification Bell Icon",
      description: "Modern notification bell icon with animation indicators created with AI. Ideal for alerts, reminders, and real-time notification systems in UI/UX design.",
      style: "icon/colored_outline"
    },
    {
      src: "/icon-generator-examples/minimalist-navigation-menu-hamburger-icon.svg",
      alt: "AI-generated minimalist hamburger menu navigation icon",
      title: "Navigation Menu Icon",
      description: "Clean, minimalist hamburger menu icon generated by AI. Essential for mobile interfaces, responsive websites, and app navigation systems.",
      style: "icon/outline"
    }
  ],
  app_icons: [
    {
      src: "/icon-generator-examples/productivity-timer-pomodoro-icon.svg",
      alt: "AI-generated productivity timer pomodoro app icon",
      title: "Productivity Timer Icon",
      description: "Productivity timer/pomodoro icon with gradient fill generated by AI. Perfect for time management apps, productivity tools, and focus applications.",
      style: "icon/colored_shapes_gradient"
    }
  ],
  business: [
    {
      src: "/icon-generator-examples/shopping-cart-icon.svg",
      alt: "AI-generated shopping cart icon for e-commerce business websites",
      title: "E-commerce Cart Icon",
      description: "Professional shopping cart icon generated by AI. Essential for online stores, e-commerce platforms, and business websites with product offerings.",
      style: "icon"
    }
  ],
  social_media: [
    {
      src: "/icon-generator-examples/engagement-metrics-icon-likes-shares-views-.svg",
      alt: "AI-generated social media engagement metrics icon showing likes, shares and views",
      title: "Engagement Metrics Icon",
      description: "Social media metrics icon showing likes, shares, and views created with AI. Perfect for analytics dashboards, social media platforms, and content creation tools.",
      style: "icon/colored_shapes_gradient"
    },
    {
      src: "/icon-generator-examples/community-group-discussion-icon (1).svg",
      alt: "AI-generated community group discussion icon for social platforms",
      title: "Community Discussion Icon",
      description: "Modern community group discussion icon generated by AI. Ideal for forums, social networks, team collaboration, and online communities.",
      style: "icon/doodle_fill"
    }
  ],
  tech: [
    {
      src: "/icon-generator-examples/cybersecurity-icon-with-shield-and-lock.svg",
      alt: "AI-generated cybersecurity icon with shield and lock for technology applications",
      title: "Cybersecurity Icon",
      description: "Tech-inspired cybersecurity icon with shield and lock design created by AI. Perfect for security applications, data protection services, and tech products.",
      style: "icon/broken_line"
    }
  ]
};

// Move all state inside the component function
export default function IconExamples() {
  // Fix 1: Move useState hooks inside the component function
  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);
  const [currentIndex, setCurrentIndex] = useState(0);
  
  // Fix 2: Calculate derived values inside the component
  const allExamples = Object.values(iconExamplesByUseCase).flat();
  const iconExamples = selectedCategory 
    ? iconExamplesByUseCase[selectedCategory as keyof typeof iconExamplesByUseCase] 
    : allExamples;
  
  const nextSlide = () => {
    setCurrentIndex((prevIndex) => (prevIndex + 1) % iconExamples.length)
  }
  
  const prevSlide = () => {
    setCurrentIndex((prevIndex) => (prevIndex - 1 + iconExamples.length) % iconExamples.length)
  }
  
  // Calculate indices for visible examples (3 at a time on desktop)
  const getVisibleExamples = () => {
    const examples = []
    for (let i = 0; i < 3; i++) {
      if (i >= iconExamples.length) break; // Don't exceed available examples
      const index = (currentIndex + i) % iconExamples.length
      examples.push(iconExamples[index])
    }
    return examples
  }
  
  const visibleExamples = getVisibleExamples()

  // Filter by use case
  const handleCategoryChange = (category: string | null) => {
    setSelectedCategory(category);
    setCurrentIndex(0); // Reset index when category changes
  };

  // Available use case categories
  const categories = [
    { id: null, label: "All Styles" },
    { id: "ui_ux", label: "UI/UX Design" },
    { id: "app_icons", label: "App Icons" },
    { id: "business", label: "Business" },
    { id: "social_media", label: "Social Media" },
    { id: "tech", label: "Technology" }
  ];

  return (
    <section className="py-16 bg-gray-50">
      <div className="container mx-auto px-4 max-w-6xl">
        <h2 className="text-3xl font-bold text-center mb-3">AI Icon Generator Gallery</h2>
        <p className="text-center text-gray-600 mb-6 max-w-2xl mx-auto">
          Browse professional SVG icons created with our AI icon generator. Each example below was generated from a text prompt in seconds, demonstrating how our tool turns words into stunning vector graphics for any project.
        </p>
        
        {/* Category filtering */}
        <div className="flex flex-wrap justify-center gap-2 mb-8">
          {categories.map(category => (
            <button
              key={category.id || 'all'}
              onClick={() => handleCategoryChange(category.id)}
              className={`px-3 py-1.5 rounded-md text-sm transition-colors ${
                selectedCategory === category.id
                  ? "bg-blue-100 text-blue-800 border border-blue-200"
                  : "bg-gray-100 text-gray-700 hover:bg-gray-200 border border-transparent"
              }`}
            >
              {category.label}
            </button>
          ))}
        </div>
        
        {/* Examples showcase with navigation */}
        <div className="relative">
          {/* Navigation buttons */}
          {iconExamples.length > 3 && (
            <>
              <button 
                onClick={prevSlide}
                className="absolute left-0 top-1/2 -translate-y-1/2 z-10 bg-white rounded-full p-2 shadow-md border border-gray-200 lg:-left-4"
                aria-label="Previous examples"
              >
                <ChevronLeft className="h-5 w-5 text-gray-600" />
              </button>
              
              <button 
                onClick={nextSlide}
                className="absolute right-0 top-1/2 -translate-y-1/2 z-10 bg-white rounded-full p-2 shadow-md border border-gray-200 lg:-right-4"
                aria-label="Next examples"
              >
                <ChevronRight className="h-5 w-5 text-gray-600" />
              </button>
            </>
          )}
          
          {/* Examples grid */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 px-8">
            {visibleExamples.length > 0 ? (
              visibleExamples.map((example, index) => (
                <div key={index} className="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
                  <div className="p-6 flex flex-col items-center">
                    <div className="w-40 h-40 flex items-center justify-center bg-[#FAFAFA] rounded-md mb-4">
                      <img 
                        src={example.src} 
                        alt={example.alt} 
                        className="w-4/5 h-4/5 object-contain"
                      />
                    </div>
                    <h3 className="font-medium text-gray-800 mb-2">{example.title}</h3>
                    <p className="text-sm text-gray-600 text-center">{example.description}</p>
                    <span className="mt-3 px-2 py-1 bg-blue-50 text-blue-700 text-xs rounded-full">
                      {example.style.replace('icon/', '').replace('_', ' ')}
                    </span>
                  </div>
                </div>
              ))
            ) : (
              <div className="col-span-3 py-12 text-center text-gray-500">
                No examples available for this category.
              </div>
            )}
          </div>
        </div>
        
        {/* Indicator dots */}
        {iconExamples.length > 3 && (
          <div className="flex justify-center mt-6 gap-1.5">
            {Array.from({ length: Math.ceil(iconExamples.length / 3) }).map((_, idx) => {
              const slideIndex = idx * 3;
              return (
                <button
                  key={idx}
                  onClick={() => setCurrentIndex(slideIndex)}
                  className={`w-2 h-2 rounded-full transition-colors ${
                    slideIndex === currentIndex ? 'bg-blue-600' : 'bg-gray-300 hover:bg-gray-400'
                  }`}
                  aria-label={`Go to example group ${idx + 1}`}
                />
              );
            })}
          </div>
        )}
      </div>
    </section>
  )
}